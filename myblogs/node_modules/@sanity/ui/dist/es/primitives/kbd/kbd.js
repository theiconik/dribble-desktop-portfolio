var __defProp = Object.defineProperty;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {enumerable: true, configurable: true, writable: true, value}) : obj[key] = value;
var __objSpread = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
import React, {forwardRef} from "react";
import styled, {css} from "styled-components";
import {responsiveRadiusStyle} from "../../styles/internal";
import {Box} from "../box";
import {Code} from "../code";
function kbdStyle() {
  return css`
    background: var(--card-bg-color);
    font: inherit;
    box-shadow: inset 0 0 0 1px var(--card-hairline-hard-color);

    &:not([hidden]) {
      display: inline-block;
    }
  `;
}
const Root = styled.kbd(responsiveRadiusStyle, kbdStyle);
const KBD = forwardRef((props, ref) => {
  const _a = props, {children, fontSize = 1, padding = 1, radius = 2} = _a, restProps = __objRest(_a, ["children", "fontSize", "padding", "radius"]);
  return /* @__PURE__ */ React.createElement(Root, __objSpread(__objSpread({
    "data-ui": "KBD"
  }, restProps), {
    $radius: radius,
    ref
  }), /* @__PURE__ */ React.createElement(Box, {
    as: "span",
    padding
  }, /* @__PURE__ */ React.createElement(Code, {
    as: "span",
    muted: true,
    size: fontSize
  }, children)));
});
KBD.displayName = "KBD";
export {
  KBD
};
