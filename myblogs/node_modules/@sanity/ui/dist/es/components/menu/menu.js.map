{
  "version": 3,
  "sources": ["../../../../src/components/menu/menu.tsx"],
  "sourcesContent": ["import React, {forwardRef, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport styled from 'styled-components'\nimport {useClickOutside, useGlobalKeyDown} from '../../hooks'\nimport {Box, Stack} from '../../primitives'\nimport {ResponsivePaddingProps} from '../../primitives/types'\nimport {useLayer} from '../../utils'\nimport {getFocusableElements} from './helpers'\nimport {MenuContext, MenuContextValue} from './menuContext'\n\ninterface MenuProps extends ResponsivePaddingProps {\n  focusLast?: boolean\n  onClickOutside?: (event: MouseEvent) => void\n  onEscape?: () => void\n  onItemClick?: () => void\n  onItemSelect?: (index: number) => void\n  space?: number | number[]\n}\n\nconst Root = styled(Box)`\n  outline: none;\n  overflow: auto;\n`\n\nexport const Menu = forwardRef(\n  (props: MenuProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height'>, ref) => {\n    const {\n      children,\n      focusLast,\n      onClickOutside,\n      onEscape,\n      onItemClick,\n      onItemSelect,\n      padding = 1,\n      space = 1,\n      ...restProps\n    } = props\n    const {isTopLayer} = useLayer()\n    const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n    const itemsRef = useRef<HTMLElement[]>([])\n    const [activeIndex, setActiveIndex] = useState(-1)\n    const [activeElement, setActiveElement] = useState<HTMLElement | null>(null)\n    const activeElementRef = useRef<HTMLElement | null>(activeElement)\n\n    useEffect(() => {\n      if (onItemSelect) onItemSelect(activeIndex)\n    }, [activeIndex, onItemSelect])\n\n    useEffect(() => {\n      activeElementRef.current = activeElement\n    }, [activeElement])\n\n    useEffect(() => {\n      const rafId = window.requestAnimationFrame(() => {\n        if (rootElement) {\n          if (activeElementRef.current) {\n            activeElementRef.current.focus()\n            setActiveIndex(itemsRef.current.indexOf(activeElementRef.current))\n\n            return\n          }\n\n          const element = itemsRef.current[focusLast ? itemsRef.current.length - 1 : 0]\n\n          if (element) {\n            element.focus()\n            setActiveIndex(itemsRef.current.indexOf(element))\n          }\n        }\n      })\n\n      return () => {\n        window.cancelAnimationFrame(rafId)\n      }\n    }, [focusLast, rootElement])\n\n    const setRef = useCallback(\n      (el: HTMLDivElement | null) => {\n        setRootElement(el)\n        if (typeof ref === 'function') ref(el)\n        else if (ref) ref.current = el\n      },\n      [ref]\n    )\n\n    const mount = useCallback((element: HTMLElement | null, selected?: boolean) => {\n      if (!element) return () => undefined\n\n      if (!itemsRef.current.includes(element)) {\n        itemsRef.current.push(element)\n      }\n\n      if (selected === true) {\n        setActiveElement(element)\n      }\n\n      return () => {\n        const idx = itemsRef.current.push(element)\n\n        if (idx > -1) {\n          itemsRef.current.splice(idx, 1)\n        }\n      }\n    }, [])\n\n    const handleKeyDown = useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === 'ArrowUp') {\n          event.preventDefault()\n\n          const focusableElements = getFocusableElements(itemsRef.current)\n          const focusableLen = focusableElements.filter(({focusable}) => focusable).length\n\n          if (focusableLen === 0) return\n\n          const len = focusableElements.length\n\n          let currentIndex = activeIndex\n          let focusable = false\n          let element: HTMLElement | null = null\n\n          while (!focusable) {\n            currentIndex = (currentIndex - 1 + len) % len\n            element = focusableElements[currentIndex].element\n            focusable = focusableElements[currentIndex].focusable\n          }\n\n          setActiveIndex(currentIndex)\n\n          if (element) element.focus()\n\n          return\n        }\n\n        if (event.key === 'ArrowDown') {\n          event.preventDefault()\n\n          const focusableElements = getFocusableElements(itemsRef.current)\n          const focusableLen = focusableElements.filter(({focusable}) => focusable).length\n\n          if (focusableLen === 0) return\n\n          const len = focusableElements.length\n\n          let currentIndex = activeIndex\n          let focusable = false\n          let element: HTMLElement | null = null\n\n          while (!focusable) {\n            currentIndex = (currentIndex + 1) % len\n            element = focusableElements[currentIndex].element\n            focusable = focusableElements[currentIndex].focusable\n          }\n\n          setActiveIndex(currentIndex)\n\n          if (element) element.focus()\n\n          return\n        }\n      },\n      [activeIndex]\n    )\n\n    const handleItemMouseEnter = useCallback((event: React.MouseEvent<HTMLElement>) => {\n      const element = event.currentTarget\n\n      setActiveIndex(itemsRef.current.indexOf(element))\n\n      element.focus()\n    }, [])\n\n    const handleItemMouseLeave = useCallback(() => {\n      setActiveIndex(-1)\n      rootElement?.focus()\n    }, [rootElement])\n\n    useClickOutside(\n      useCallback((event) => isTopLayer && onClickOutside && onClickOutside(event), [\n        isTopLayer,\n        onClickOutside,\n      ]),\n      [rootElement]\n    )\n\n    useGlobalKeyDown(\n      useCallback(\n        (event) => {\n          if (!isTopLayer) return\n\n          if (event.key === 'Escape') {\n            event.stopPropagation()\n            if (onEscape) onEscape()\n          }\n        },\n        [isTopLayer, onEscape]\n      )\n    )\n\n    const value: MenuContextValue = useMemo(\n      () => ({\n        version: 0.0,\n        activeElement,\n        activeIndex,\n        mount,\n        onMouseEnter: handleItemMouseEnter,\n        onMouseLeave: handleItemMouseLeave,\n        onItemClick,\n      }),\n      [activeElement, activeIndex, mount, handleItemMouseEnter, handleItemMouseLeave, onItemClick]\n    )\n\n    return (\n      <MenuContext.Provider value={value}>\n        <Root\n          data-ui=\"Menu\"\n          {...restProps}\n          onKeyDown={handleKeyDown}\n          padding={padding}\n          ref={setRef}\n          role=\"menu\"\n          tabIndex={-1}\n        >\n          <Stack space={space}>{children}</Stack>\n        </Root>\n      </MenuContext.Provider>\n    )\n  }\n)\n\nMenu.displayName = 'Menu'\n"],
  "mappings": "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",
  "names": []
}
