{
  "version": 3,
  "sources": ["../../../../src/components/menu/menuGroup.tsx"],
  "sourcesContent": ["import {ChevronRightIcon} from '@sanity/icons'\nimport React, {useEffect, useRef, useState} from 'react'\nimport styled, {css} from 'styled-components'\nimport {Box, Popover, Text} from '../../primitives'\nimport {ThemeProps} from '../../styles'\nimport {Menu} from './menu'\nimport {useMenu} from './useMenu'\n\nconst Root = styled.button((props: ThemeProps) => {\n  const {theme} = props\n  const tone = theme.sanity.color.card\n\n  return css`\n    -webkit-font-smoothing: inherit;\n    appearance: none;\n    font: inherit;\n    border: 0;\n    border-radius: 0;\n    background: none;\n    color: inherit;\n    text-align: left;\n    margin: 0;\n    padding: 0;\n    outline: none;\n    background-color: var(--card-bg-color);\n    color: var(--card-fg-color);\n\n    &:not(:disabled):focus {\n      --card-bg-color: ${tone.selected.bg} !important;\n      --card-fg-color: ${tone.selected.fg} !important;\n    }\n\n    &:not(:disabled):active {\n      --card-bg-color: ${tone.pressed.bg};\n      --card-fg-color: ${tone.pressed.fg};\n    }\n\n    &:disabled {\n      --card-bg-color: ${tone.disabled.bg};\n      --card-fg-color: ${tone.disabled.fg};\n    }\n  `\n})\n\nconst TextContainer = styled.span`\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  & > div:first-child {\n    flex: 1;\n    min-width: 0;\n  }\n`\n\nexport function MenuGroup({children, title}: {children: React.ReactNode; title: string}) {\n  const [open, setOpen] = useState(false)\n  const {mount, onItemClick, onMouseEnter, onMouseLeave} = useMenu()\n  const rootRef = useRef<HTMLButtonElement | null>(null)\n  const mouseLeaveTimeoutRef = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => mount(rootRef.current), [mount])\n\n  const handleMouseEnter = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (mouseLeaveTimeoutRef.current) {\n      clearTimeout(mouseLeaveTimeoutRef.current)\n    }\n\n    onMouseEnter(event)\n    setOpen(true)\n  }\n\n  const handleMouseLeave = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onMouseLeave(event)\n\n    mouseLeaveTimeoutRef.current = setTimeout(() => {\n      setOpen(false)\n    }, 5000)\n  }\n\n  const handleMenuMouseEnter = () => {\n    if (mouseLeaveTimeoutRef.current !== null) {\n      clearTimeout(mouseLeaveTimeoutRef.current)\n      mouseLeaveTimeoutRef.current = null\n    }\n  }\n\n  const handleMenuMouseLeave = () => {\n    mouseLeaveTimeoutRef.current = setTimeout(() => {\n      setOpen(false)\n    }, 5000)\n  }\n\n  useEffect(() => {\n    return () => {\n      if (mouseLeaveTimeoutRef.current !== null) {\n        clearTimeout(mouseLeaveTimeoutRef.current)\n        mouseLeaveTimeoutRef.current = null\n      }\n    }\n  }, [])\n\n  const content = (\n    <Menu onMouseEnter={handleMenuMouseEnter} onMouseLeave={handleMenuMouseLeave}>\n      {children}\n    </Menu>\n  )\n\n  return (\n    <Popover content={content} data-ui=\"MenuGroup\" open={open} placement=\"right\">\n      <Root\n        data-ui=\"MenuGroup\"\n        onClick={onItemClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        ref={rootRef}\n      >\n        <Box padding={3}>\n          <TextContainer>\n            <Text>{title}</Text>\n            <Text>\n              <ChevronRightIcon />\n            </Text>\n          </TextContainer>\n        </Box>\n      </Root>\n    </Popover>\n  )\n}\n"],
  "mappings": "AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAM,OAAO,OAAO,OAAO,CAAC,UAAsB;AAChD,QAAM,CAAC,SAAS;AAChB,QAAM,OAAO,MAAM,OAAO,MAAM;AAEhC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAgBgB,KAAK,SAAS;AAAA,yBACd,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA,yBAId,KAAK,QAAQ;AAAA,yBACb,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA,yBAIb,KAAK,SAAS;AAAA,yBACd,KAAK,SAAS;AAAA;AAAA;AAAA;AAKvC,MAAM,gBAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWtB,mBAAmB,CAAC,UAAU,QAAoD;AACvF,QAAM,CAAC,MAAM,WAAW,SAAS;AACjC,QAAM,CAAC,OAAO,aAAa,cAAc,gBAAgB;AACzD,QAAM,UAAU,OAAiC;AACjD,QAAM,uBAAuB,OAA8B;AAE3D,YAAU,MAAM,MAAM,QAAQ,UAAU,CAAC;AAEzC,QAAM,mBAAmB,CAAC,UAA+C;AACvE,QAAI,qBAAqB,SAAS;AAChC,mBAAa,qBAAqB;AAAA;AAGpC,iBAAa;AACb,YAAQ;AAAA;AAGV,QAAM,mBAAmB,CAAC,UAA+C;AACvE,iBAAa;AAEb,yBAAqB,UAAU,WAAW,MAAM;AAC9C,cAAQ;AAAA,OACP;AAAA;AAGL,QAAM,uBAAuB,MAAM;AACjC,QAAI,qBAAqB,YAAY,MAAM;AACzC,mBAAa,qBAAqB;AAClC,2BAAqB,UAAU;AAAA;AAAA;AAInC,QAAM,uBAAuB,MAAM;AACjC,yBAAqB,UAAU,WAAW,MAAM;AAC9C,cAAQ;AAAA,OACP;AAAA;AAGL,YAAU,MAAM;AACd,WAAO,MAAM;AACX,UAAI,qBAAqB,YAAY,MAAM;AACzC,qBAAa,qBAAqB;AAClC,6BAAqB,UAAU;AAAA;AAAA;AAAA,KAGlC;AAEH,QAAM,UACJ,oCAAC,MAAD;AAAA,IAAM,cAAc;AAAA,IAAsB,cAAc;AAAA,KACrD;AAIL,SACE,oCAAC,SAAD;AAAA,IAAS;AAAA,IAAkB,WAAQ;AAAA,IAAY;AAAA,IAAY,WAAU;AAAA,KACnE,oCAAC,MAAD;AAAA,IACE,WAAQ;AAAA,IACR,SAAS;AAAA,IACT,cAAc;AAAA,IACd,cAAc;AAAA,IACd,KAAK;AAAA,KAEL,oCAAC,KAAD;AAAA,IAAK,SAAS;AAAA,KACZ,oCAAC,eAAD,MACE,oCAAC,MAAD,MAAO,QACP,oCAAC,MAAD,MACE,oCAAC,kBAAD;AAAA;",
  "names": []
}
