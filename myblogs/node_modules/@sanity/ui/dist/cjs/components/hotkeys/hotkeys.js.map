{
  "version": 3,
  "sources": ["../../../../src/components/hotkeys/hotkeys.tsx"],
  "sourcesContent": ["import React, {forwardRef} from 'react'\nimport styled from 'styled-components'\nimport {Inline, KBD} from '../../primitives'\n\ninterface HotkeysProps {\n  padding?: number | number[]\n  radius?: number | number[]\n  size?: number | number[]\n  space?: number | number[]\n  keys?: string[]\n}\n\nconst Root = styled.kbd`\n  &:not([hidden]) {\n    display: block;\n  }\n  font: inherit;\n`\n\nconst Key = styled(KBD)`\n  &:not([hidden]) {\n    display: block;\n  }\n`\n\nexport const Hotkeys = forwardRef(\n  (\n    props: HotkeysProps & Omit<React.HTMLProps<HTMLElement>, 'as' | 'ref'>,\n    ref: React.Ref<HTMLElement>\n  ) => {\n    const {keys, padding, radius, size, space = 1, ...restProps} = props\n\n    if (!keys || keys.length === 0) {\n      return <span />\n    }\n\n    return (\n      <Root data-ui=\"Hotkeys\" {...restProps} ref={ref}>\n        <Inline as=\"span\" space={space}>\n          {keys.map((key, i) => (\n            <Key fontSize={size} key={i} padding={padding} radius={radius}>\n              {key}\n            </Key>\n          ))}\n        </Inline>\n      </Root>\n    )\n  }\n)\n\nHotkeys.displayName = 'Hotkeys'\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgC;AAChC,+BAAmB;AACnB,wBAA0B;AAU1B,MAAM,OAAO,iCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpB,MAAM,MAAM,sCAAO;AAAA;AAAA;AAAA;AAAA;AAMZ,MAAM,UAAU,6BACrB,CACE,OACA,QACG;AACH,QAA+D,YAAxD,OAAM,SAAS,QAAQ,MAAM,QAAQ,KAAmB,IAAb,sBAAa,IAAb,CAA3C,QAAM,WAAS,UAAQ,QAAM;AAEpC,MAAI,CAAC,QAAQ,KAAK,WAAW,GAAG;AAC9B,WAAO,mDAAC,QAAD;AAAA;AAGT,SACE,mDAAC,MAAD;AAAA,IAAM,WAAQ;AAAA,KAAc,YAA5B;AAAA,IAAuC;AAAA,MACrC,mDAAC,0BAAD;AAAA,IAAQ,IAAG;AAAA,IAAO;AAAA,KACf,KAAK,IAAI,CAAC,KAAK,MACd,mDAAC,KAAD;AAAA,IAAK,UAAU;AAAA,IAAM,KAAK;AAAA,IAAG;AAAA,IAAkB;AAAA,KAC5C;AAAA;AASf,QAAQ,cAAc;",
  "names": []
}
